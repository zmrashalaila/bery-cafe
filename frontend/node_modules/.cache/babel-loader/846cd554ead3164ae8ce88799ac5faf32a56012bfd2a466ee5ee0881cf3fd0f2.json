{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import coffeeImage from '../assets/pinky.jpg';\n\n// const Login = () => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n//     const navigate = useNavigate();\n\n//     const handleLogin = async (e) => {\n//         e.preventDefault();\n\n//         try {\n//             const response = await fetch('http://localhost:22077/auth/auth', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({ username, password }),\n//             });\n\n//             const data = await response.json();\n\n//             if (data.message === 'Authentication Successed') {\n//                 const { role, username, id_user } = data.data;\n//                 localStorage.setItem('username', username);\n//                 localStorage.setItem('role', role);\n//                 localStorage.setItem('id_user', id_user);\n\n//                 switch (role) {\n//                     case 'kasir':\n//                         navigate('/cashier');\n//                         break;\n//                     case 'manajer':\n//                         navigate('/manajer');\n//                         break;\n//                     case 'admin':\n//                         navigate('/admin');\n//                         break;\n//                     default:\n//                         setError('Invalid role');\n//                 }\n//             } else {\n//                 setError('Invalid username or password');\n//             }\n//         } catch (err) {\n//             setError('Error logging in');\n//         }\n//     };\n\n//     return (\n//         <div className=\"min-h-screen flex items-center justify-center bg-pastelPink\">\n//             <div className=\"bg-white shadow-md rounded-lg flex flex-col md:flex-row w-full max-w-4xl overflow-hidden\">\n//                 {/* Left Side - Image & Text */}\n//                 <div className=\"relative hidden md:flex md:w-1/2 p-8 bg-pink-50 items-center justify-center\">\n//                     <div className=\"absolute inset-0 bg-cover bg-center\" style={{ backgroundImage: `url(${coffeeImage})` }}></div>\n//                     <div className=\"relative z-10 text-center\">\n//                         <h2 className=\"text-3xl font-semibold text-pastelRose\">Welcome to Cofesho!</h2>\n//                         <p className=\"mt-2 text-pastelRose\">Kick back, sip, and enjoy the blend of laughter, warmth, and a little extra pep in your step</p>\n//                     </div>\n//                 </div>\n\n//                 {/* Right Side - Login Form */}\n//                 <div className=\"w-full md :w-1/2 p-8\">\n//                     <h3 className=\"text-2xl font-semibold text-center text-gray-700\">Login</h3>\n//                     <p className=\"text-center text-gray-500\">Welcome back! Please enter your details.</p>\n\n//                     {/* Input Fields */}\n//                     <form onSubmit={handleLogin} className=\"mt-8 space-y-4\">\n//                         <input\n//                             type='text'\n//                             className=\"w-full p-3 border border-pink-200 rounded-lg focus:ring-2 focus:ring-pink-400\"\n//                             value={username}\n//                             onChange={(e) => setUsername(e.target.value)}\n//                             placeholder='Username'\n//                             required \n//                         />\n//                         <input\n//                             type='password'\n//                             className=\"w-full p-3 border border-pink-200 rounded-lg focus:ring-2 focus:ring-pink-400\"\n//                             value={password}\n//                             onChange={(e) => setPassword(e.target.value)}\n//                             placeholder='Password'\n//                             required \n//                         />\n\n//                         {/* Remember Me */}\n//                         <div className=\"flex items-center justify-between\">\n//                             <label className=\"flex items-center text-gray-500\">\n//                                 <input type=\"checkbox\" className=\"h-4 w-4 text-pink-500 rounded\" />\n//                                 <span className=\"ml-2 text-sm\">Remember me for 30 days</span>\n//                             </label>\n//                         </div>\n\n//                         {/* Log in Button */}\n//                         <div className=\"mt-6\">\n//                             <button \n//                                 type=\"submit\"\n//                                 className=\"w-full bg-pastelRose text-white py-3 rounded-lg hover:bg-cream transition\"\n//                             >\n//                                 Log in\n//                             </button>\n//                         </div>\n\n//                         {/* Error Message */}\n//                         {error && <p className='text-red-500 text-center mt-3'>{error}</p>}\n//                     </form>\n\n//                     {/* Registration Link */}\n//                     <p className='text-center mt-3 text-pastelRose'>\n//                         Don't have an account? <a href='/register' className=\"text-pastelRose hover:underline\">Register</a>\n//                     </p>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["C:/KELAS 11/UKK_Kafe/frontend/cofesho/src/page/LoginPage.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import coffeeImage from '../assets/pinky.jpg';\r\n\r\n// const Login = () => {\r\n//     const [username, setUsername] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [error, setError] = useState('');\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleLogin = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         try {\r\n//             const response = await fetch('http://localhost:22077/auth/auth', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify({ username, password }),\r\n//             });\r\n\r\n//             const data = await response.json();\r\n\r\n//             if (data.message === 'Authentication Successed') {\r\n//                 const { role, username, id_user } = data.data;\r\n//                 localStorage.setItem('username', username);\r\n//                 localStorage.setItem('role', role);\r\n//                 localStorage.setItem('id_user', id_user);\r\n\r\n//                 switch (role) {\r\n//                     case 'kasir':\r\n//                         navigate('/cashier');\r\n//                         break;\r\n//                     case 'manajer':\r\n//                         navigate('/manajer');\r\n//                         break;\r\n//                     case 'admin':\r\n//                         navigate('/admin');\r\n//                         break;\r\n//                     default:\r\n//                         setError('Invalid role');\r\n//                 }\r\n//             } else {\r\n//                 setError('Invalid username or password');\r\n//             }\r\n//         } catch (err) {\r\n//             setError('Error logging in');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"min-h-screen flex items-center justify-center bg-pastelPink\">\r\n//             <div className=\"bg-white shadow-md rounded-lg flex flex-col md:flex-row w-full max-w-4xl overflow-hidden\">\r\n//                 {/* Left Side - Image & Text */}\r\n//                 <div className=\"relative hidden md:flex md:w-1/2 p-8 bg-pink-50 items-center justify-center\">\r\n//                     <div className=\"absolute inset-0 bg-cover bg-center\" style={{ backgroundImage: `url(${coffeeImage})` }}></div>\r\n//                     <div className=\"relative z-10 text-center\">\r\n//                         <h2 className=\"text-3xl font-semibold text-pastelRose\">Welcome to Cofesho!</h2>\r\n//                         <p className=\"mt-2 text-pastelRose\">Kick back, sip, and enjoy the blend of laughter, warmth, and a little extra pep in your step</p>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 {/* Right Side - Login Form */}\r\n//                 <div className=\"w-full md :w-1/2 p-8\">\r\n//                     <h3 className=\"text-2xl font-semibold text-center text-gray-700\">Login</h3>\r\n//                     <p className=\"text-center text-gray-500\">Welcome back! Please enter your details.</p>\r\n                    \r\n//                     {/* Input Fields */}\r\n//                     <form onSubmit={handleLogin} className=\"mt-8 space-y-4\">\r\n//                         <input\r\n//                             type='text'\r\n//                             className=\"w-full p-3 border border-pink-200 rounded-lg focus:ring-2 focus:ring-pink-400\"\r\n//                             value={username}\r\n//                             onChange={(e) => setUsername(e.target.value)}\r\n//                             placeholder='Username'\r\n//                             required \r\n//                         />\r\n//                         <input\r\n//                             type='password'\r\n//                             className=\"w-full p-3 border border-pink-200 rounded-lg focus:ring-2 focus:ring-pink-400\"\r\n//                             value={password}\r\n//                             onChange={(e) => setPassword(e.target.value)}\r\n//                             placeholder='Password'\r\n//                             required \r\n//                         />\r\n\r\n//                         {/* Remember Me */}\r\n//                         <div className=\"flex items-center justify-between\">\r\n//                             <label className=\"flex items-center text-gray-500\">\r\n//                                 <input type=\"checkbox\" className=\"h-4 w-4 text-pink-500 rounded\" />\r\n//                                 <span className=\"ml-2 text-sm\">Remember me for 30 days</span>\r\n//                             </label>\r\n//                         </div>\r\n\r\n//                         {/* Log in Button */}\r\n//                         <div className=\"mt-6\">\r\n//                             <button \r\n//                                 type=\"submit\"\r\n//                                 className=\"w-full bg-pastelRose text-white py-3 rounded-lg hover:bg-cream transition\"\r\n//                             >\r\n//                                 Log in\r\n//                             </button>\r\n//                         </div>\r\n\r\n//                         {/* Error Message */}\r\n//                         {error && <p className='text-red-500 text-center mt-3'>{error}</p>}\r\n//                     </form>\r\n\r\n//                     {/* Registration Link */}\r\n//                     <p className='text-center mt-3 text-pastelRose'>\r\n//                         Don't have an account? <a href='/register' className=\"text-pastelRose hover:underline\">Register</a>\r\n//                     </p>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Login;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}