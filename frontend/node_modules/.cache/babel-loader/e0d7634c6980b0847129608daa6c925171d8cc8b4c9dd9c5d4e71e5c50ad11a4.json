{"ast":null,"code":"// import React, { useState } from 'react';\n// import 'tailwindcss/tailwind.css';\n// import login_bg from '../assets/login_bg.png';\n// import { useNavigate } from 'react-router-dom';\n\n// const Register = () => {\n//   const [name, setName] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [role, setRole] = useState('kasir'); // Default role can be set to 'kasir'\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   const register = async (e) => {\n//     e.preventDefault();\n\n//     if (password !== confirmPassword) {\n//       setError(\"Passwords don't match\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:8000/register', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ name, username, password, role }), // Include name and role in the request\n//       });\n\n//       const data = await response.json();\n\n//       if (data.message === 'Registration Success') {\n//         navigate('/'); // Redirect to login page after successful registration\n//       } else {\n//         setError(data.message || 'Registration failed');\n//       }\n//     } catch (err) {\n//       setError('Error registering');\n//     }\n//   };\n\n//    return (\n//     <div \n//       className=\"min-h-screen flex items-center justify-start bg-cover bg-center\" \n//       style={{ backgroundImage: `url(${login_bg})` }}\n//     >\n//       <div className=\"bg-white shadow-md rounded-lg flex flex-col w-full max-w-md p-8 ml-[200px]\">\n//         <h2 className=\"text-3xl font-bold text-center text-pastelRose mb-4\">Hello Bloomies!</h2>\n//         <p className=\"text-center text-gray-500 mb-6\">Create your account below.</p>\n\n//         {/* Input Fields */}\n//         <form onSubmit={register} className=\"space-y-4\">\n//           <input\n//             type=\"text\"\n//             className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pastelPink\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             placeholder=\"Name\"\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pastelPink\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             placeholder=\"Username\"\n//             required\n//           />\n//           <input\n//             type=\"password\"\n//             className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pastelPink\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             placeholder=\"Password\"\n//             required\n//           />\n//           {/* <input\n//             type=\"password\"\n//             className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pastelPink\"\n//             value={confirmPassword}\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//             placeholder=\"Confirm Password\"\n//             required\n//           /> */}\n//           <select\n//             value={role}\n//             onChange={(e) => setRole(e.target.value)}\n//             className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pastelPink\"\n//           >\n//             <option value=\"kasir\">Kasir</option>\n//             <option value=\"manajer\">Manajer</option>\n//             <option value=\"admin\">Admin</option>\n//           </select>\n\n//           {/* Error Message */}\n//           {error && <p className=\"text-red-500 text-center mt-3\">{error}</p>}\n\n//           {/* Register Button */}\n//           <div className=\"mt-6\">\n//             <button\n//               type=\"submit\"\n//               className=\"w-full bg-pastelRose text-white py-3 rounded-lg hover:bg-pastelLightPink transition\"\n//             >\n//               Register\n//             </button>\n//           </div>\n//         </form>\n\n//         {/* Login Link */}\n//         <p className=\"text-center mt-6 text-pastelLightPink\">\n//           Already have an account? <a href=\"/\" className=\"text-pastelLightPink hover:underline\">Log in</a>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;","map":{"version":3,"names":[],"sources":["C:/KELAS 11/UKK_Kafe/frontend/cofesho/src/page/Register.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import 'tailwindcss/tailwind.css';\r\n// import login_bg from '../assets/login_bg.png';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Register = () => {\r\n//   const [name, setName] = useState('');\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [confirmPassword, setConfirmPassword] = useState('');\r\n//   const [role, setRole] = useState('kasir'); // Default role can be set to 'kasir'\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const register = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (password !== confirmPassword) {\r\n//       setError(\"Passwords don't match\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/register', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({ name, username, password, role }), // Include name and role in the request\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (data.message === 'Registration Success') {\r\n//         navigate('/'); // Redirect to login page after successful registration\r\n//       } else {\r\n//         setError(data.message || 'Registration failed');\r\n//       }\r\n//     } catch (err) {\r\n//       setError('Error registering');\r\n//     }\r\n//   };\r\n\r\n//    return (\r\n//     <div \r\n//       className=\"min-h-screen flex items-center justify-start bg-cover bg-center\" \r\n//       style={{ backgroundImage: `url(${login_bg})` }}\r\n//     >\r\n//       <div className=\"bg-white shadow-md rounded-lg flex flex-col w-full max-w-md p-8 ml-[200px]\">\r\n//         <h2 className=\"text-3xl font-bold text-center text-pastelRose mb-4\">Hello Bloomies!</h2>\r\n//         <p className=\"text-center text-gray-500 mb-6\">Create your account below.</p>\r\n\r\n//         {/* Input Fields */}\r\n//         <form onSubmit={register} className=\"space-y-4\">\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pastelPink\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             placeholder=\"Name\"\r\n//             required\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pastelPink\"\r\n//             value={username}\r\n//             onChange={(e) => setUsername(e.target.value)}\r\n//             placeholder=\"Username\"\r\n//             required\r\n//           />\r\n//           <input\r\n//             type=\"password\"\r\n//             className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pastelPink\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             placeholder=\"Password\"\r\n//             required\r\n//           />\r\n//           {/* <input\r\n//             type=\"password\"\r\n//             className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pastelPink\"\r\n//             value={confirmPassword}\r\n//             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//             placeholder=\"Confirm Password\"\r\n//             required\r\n//           /> */}\r\n//           <select\r\n//             value={role}\r\n//             onChange={(e) => setRole(e.target.value)}\r\n//             className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pastelPink\"\r\n//           >\r\n//             <option value=\"kasir\">Kasir</option>\r\n//             <option value=\"manajer\">Manajer</option>\r\n//             <option value=\"admin\">Admin</option>\r\n//           </select>\r\n\r\n//           {/* Error Message */}\r\n//           {error && <p className=\"text-red-500 text-center mt-3\">{error}</p>}\r\n\r\n//           {/* Register Button */}\r\n//           <div className=\"mt-6\">\r\n//             <button\r\n//               type=\"submit\"\r\n//               className=\"w-full bg-pastelRose text-white py-3 rounded-lg hover:bg-pastelLightPink transition\"\r\n//             >\r\n//               Register\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n\r\n//         {/* Login Link */}\r\n//         <p className=\"text-center mt-6 text-pastelLightPink\">\r\n//           Already have an account? <a href=\"/\" className=\"text-pastelLightPink hover:underline\">Log in</a>\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}